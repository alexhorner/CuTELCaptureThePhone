; Update the CALL_PREFIX, BACKEND_URL and BACKEND_API_KEY Set() directives in both the registration and capture services below.
; 
; Changing the PIN length is possible, but must be updated on both the backend and in several places in the dialplan. You are expected to read it and modify yourself.
; 
; You'll want to add some new extensions to your extensions.conf and include this file too. Below is an example, where you may want to adjust the incoming extension
; both in the example below and in the actual [cutel-phone-game] context below.
; 
; #include cutelphonegame.conf
; 
; [your-context]
; exten => _958XXXX,1,Goto(cutel-phone-game,,1)
;     same => n,Hangup()

[cutel-phone-game]
exten => s,1,Hangup()
exten => e,1,Hangup()

; Game Registration Service
exten => 9580000,1,Verbose(2,Registration call received from ${CALLERID(num)})
    same => n,Set(CALL_PREFIX=958)
    same => n,Set(BACKEND_URL=http://127.0.0.1:5473)
    same => n,Set(BACKEND_API_KEY=changeme)
    
    same => n,Set(SAY_DTMF_INTERRUPT=0) ;Disable DTMF interruption of digit readout
    same => n,Set(CHANNEL(language)=cutelphonegame)
    same => n,Set(TIMEOUT(absolute)=900) ;15 min max timeout before automatic hangup
    same => n,Playback(cutelphonegame/welcome) ;"Welcome to the CuTEL Phone Game Registration Service. If you would like to register a new account, please hold, otherwise please hang up now."
    same => n,PlayTones(ring)
    same => n,Wait(8)
    same => n,StopPlayTones()
    
    same => n,Playback(cutelphonegame/being_created) ;"Your account is being created now, please hold."
    same => n,PlayTones(ring)
    
    same => n,Set(CURLOPT(httptimeout)=2)
    same => n,Set(CURLOPT(httpheader)=Authorization: Bearer ${BACKEND_API_KEY})
    same => n,Set(CURL_RESULT=${CURL("${BACKEND_URL}/api/game/register?fromNumber=${CALLERID(num)}", "")})
    same => n,Set(REGISTER_RESULT_MESSAGE=${JSON_DECODE(CURL_RESULT,message)})
    same => n,Set(REGISTER_RESULT_PIN=${JSON_DECODE(CURL_RESULT,pin)})
    same => n,Set(REGISTER_RESULT_NAME_A=${JSON_DECODE(CURL_RESULT,namePartA)})
    same => n,Set(REGISTER_RESULT_NAME_B=${JSON_DECODE(CURL_RESULT,namePartB)})
    same => n,Set(REGISTER_RESULT_NAME_C=${JSON_DECODE(CURL_RESULT,namePartC)})
    
    same => n,StopPlayTones()
    same => n,GotoIf(${EXISTS(${CURL_RESULT})}?:reg_failure_no_data) ;No data returned
    same => n,GotoIf(${EXISTS(${REGISTER_RESULT_MESSAGE})}?reg_failure_with_message) ;Error message returned
    same => n,GotoIf(${EXISTS(${REGISTER_RESULT_PIN})}?:reg_failure_without_message) ;Missing pin but no error message, failed some other way
    same => n,GotoIf(${EXISTS(${REGISTER_RESULT_NAME_A})}?:reg_failure_without_message) ;Missing name part A, but no error message, failed some other way
    same => n,GotoIf(${EXISTS(${REGISTER_RESULT_NAME_B})}?:reg_failure_without_message) ;Missing name part B, but no error message, failed some other way
    same => n,GotoIf(${EXISTS(${REGISTER_RESULT_NAME_C})}?:reg_failure_without_message) ;Missing name part C, but no error message, failed some other way
    
    ; Registration Success
    same => n(reg_success),Verbose(2,Registration succeeded from ${CALLERID(num)}, assigned pin is ${REGISTER_RESULT_PIN})
    same => n,Playback(cutelphonegame/registered) ;"Your account has been registered. Your personal info will be repeated several times."
    same => n(reg_success_nolog),Playback(cutelphonegame/your_pin_is) ;"Your PIN is..."
    same => n,SayDigits(${REGISTER_RESULT_PIN}) ;Read out PIN
    same => n,Playback(cutelphonegame/and_your_name_is) ;"And your name is..."
    same => n,Playback(cutelphonegame/adjectives/${REGISTER_RESULT_NAME_A}) ;Part A
    same => n,Playback(cutelphonegame/colours/${REGISTER_RESULT_NAME_B}) ;Part B
    same => n,Playback(cutelphonegame/animals/${REGISTER_RESULT_NAME_C}) ;Part C
    same => n,Playback(cutelphonegame/note_it_down) ;"Please remember to note this down somewhere. You will need to dial..."
    same => n,SayDigits(${CALL_PREFIX}${$REGISTER_RESULT_PIN}) ;Read out prefix
    same => n,SayDigits(${REGISTER_RESULT_PIN}) ;Read out PIN
    same => n,Playback(cutelphonegame/unique_number) ;"...which is your unique number to capture phones."
    same => n,Wait(1)
    same => n,Goto(reg_success_nolog) ;Repeat again
    
    ; Registration Failure Handlers
    same => n(reg_failure_no_data),Verbose(2,No CURL response data was produced during registration)
    same => n,Goto(reg_failure)
    
    same => n(reg_failure_with_message),Verbose(2,Registration failed with message: ${REGISTER_RESULT_MESSAGE})
    same => n,GotoIf($["${REGISTER_RESULT_MESSAGE}" = "This number is not allowed to be used in the game"]?reg_failure_with_message_number_not_allowed)
    same => n,Goto(reg_failure)
    
    same => n(reg_failure_with_message_number_not_allowed),Playback(cutelphonegame/number_not_allowed) ;"This phone is out of bounds. Repeated use of out of bounds phones will result in disqualification. Please hang up immediately."
    same => n,Hangup()
    
    same => n(reg_failure_without_message),Verbose(2,Unhandled CURL response: ${CURL_RESULT})
    same => n,Goto(reg_failure)
    
    ; Registration Failure
    same => n(reg_failure),Playback(cutelphonegame/error_registering) ;"Sorry, an error occured registering your account. Please try again later."
    same => n,Log(Error,Failed to register an account for ${CALLERID(num)})
    same => n,Hangup()

; Game Capturing Service
exten => _958XXXX,1,Verbose(2,Capture call recived from ${CALLERID(num)} to ${EXTEN})
    same => n,Set(CALL_PREFIX=958)
    same => n,Set(BACKEND_URL=http://127.0.0.1:5473)
    same => n,Set(BACKEND_API_KEY=changeme)

    same => n,Set(SAY_DTMF_INTERRUPT=0) ;Disable DTMF interruption of digit readout
    same => n,Set(CHANNEL(language)=cutelphonegame)
    same => n,Set(TIMEOUT(absolute)=900) ;15 min max timeout before automatic hangup
    
    same => n,PlayTones(ring)
    same => n,Set(CURLOPT(httptimeout)=2)
    same => n,Set(CURLOPT(httpheader)=Authorization: Bearer ${BACKEND_API_KEY})
    same => n,Set(CURL_RESULT=${CURL("${BACKEND_URL}/api/game/capture?fromNumber=${CALLERID(num)}&pin=${EXTEN:-4:4}", "")})
    same => n,Set(CAPTURE_RESULT_MESSAGE=${JSON_DECODE(CURL_RESULT,message)})
    same => n,Set(CAPTURE_RESULT_CAPTURED=${JSON_DECODE(CURL_RESULT,captured)})
    same => n,Set(CAPTURE_RESULT_NAME_A=${JSON_DECODE(CURL_RESULT,namePartA)})
    same => n,Set(CAPTURE_RESULT_NAME_B=${JSON_DECODE(CURL_RESULT,namePartB)})
    same => n,Set(CAPTURE_RESULT_NAME_C=${JSON_DECODE(CURL_RESULT,namePartC)})
    ;same => n,Set(CAPTURE_RESULT_WAIT_HOURS=${JSON_DECODE(CURL_RESULT,waitHours)})
    ;same => n,Set(CAPTURE_RESULT_WAIT_MINUTES=${JSON_DECODE(CURL_RESULT,waitMinutes)})
    ;same => n,Set(CAPTURE_RESULT_WAIT_SECONDS=${JSON_DECODE(CURL_RESULT,waitSeconds)})
    same => n,Set(CAPTURE_RESULT_TOTAL=${JSON_DECODE(CURL_RESULT,playerTotalCaptures)})
    same => n,Set(CAPTURE_RESULT_UNIQUE=${JSON_DECODE(CURL_RESULT,playerUniqueCaptures)})
    same => n,Set(CAPTURE_RESULT_LEADERBOARD=${JSON_DECODE(CURL_RESULT,playerLeaderboardPosition)})
    same => n,StopPlayTones()
    
    same => n,GotoIf(${EXISTS(${CURL_RESULT})}?:capture_failure_no_data) ;No data returned
    same => n,GotoIf(${EXISTS(${CAPTURE_RESULT_MESSAGE})}?capture_failure_with_message) ;Error message returned
    same => n,GotoIf(${EXISTS(${CAPTURE_RESULT_CAPTURED})}?:capture_failure_without_message) ;Missing captured but no error message, failed some other way
    same => n,GotoIf(${EXISTS(${CAPTURE_RESULT_NAME_A})}?:capture_failure_without_message) ;Missing name part A, but no error message, failed some other way
    same => n,GotoIf(${EXISTS(${CAPTURE_RESULT_NAME_B})}?:capture_failure_without_message) ;Missing name part B, but no error message, failed some other way
    same => n,GotoIf(${EXISTS(${CAPTURE_RESULT_NAME_C})}?:capture_failure_without_message) ;Missing name part C, but no error message, failed some other way
    ;same => n,GotoIf(${EXISTS(${CAPTURE_RESULT_WAIT_HOURS})}?:capture_failure_without_message) ;Missing wait hours but no error message, failed some other way
    ;same => n,GotoIf(${EXISTS(${CAPTURE_RESULT_WAIT_MINUTES})}?:capture_failure_without_message) ;Missing wait minutes but no error message, failed some other way
    ;same => n,GotoIf(${EXISTS(${CAPTURE_RESULT_WAIT_SECONDS})}?:capture_failure_without_message) ;Missing wait seconds but no error message, failed some other way
    same => n,GotoIf(${EXISTS(${CAPTURE_RESULT_TOTAL})}?:capture_failure_without_message) ;Missing total but no error message, failed some other way
    same => n,GotoIf(${EXISTS(${CAPTURE_RESULT_UNIQUE})}?:capture_failure_without_message) ;Missing unique but no error message, failed some other way
    same => n,GotoIf(${EXISTS(${CAPTURE_RESULT_LEADERBOARD})}?:capture_failure_without_message) ;Missing leaderboard but no error message, failed some other way
    
    ; Capture Completed
    same => n,GotoIf(${CAPTURE_RESULT_CAPTURED}?capture_complete_true:capture_complete_false) ;Capture complete, but handle a true or false capture
    same => n,Goto(capture_failure) ;Should never end up here
    
    ; Capture Complete True
    same => n(capture_complete_true),Verbose(2,Capture complete with true state)
    same => n,Playback(cutelphonegame/positives/well_done)
    same => n,Playback(cutelphonegame/adjectives/${CAPTURE_RESULT_NAME_A}) ;Part A
    same => n,Playback(cutelphonegame/colours/${CAPTURE_RESULT_NAME_B}) ;Part B
    same => n,Playback(cutelphonegame/animals/${CAPTURE_RESULT_NAME_C}) ;Part C
    same => n,Playback(cutelphonegame/successful_capture) ;"You have successfully captured this phone!"
    same => n,Goto(capture_stats)
    
    ; Capture Complete False
    same => n(capture_complete_false),Verbose(2,Capture complete with false state)
    same => n,Playback(cutelphonegame/negatives/sorry)
    same => n,Playback(cutelphonegame/adjectives/${CAPTURE_RESULT_NAME_A}) ;Part A
    same => n,Playback(cutelphonegame/colours/${CAPTURE_RESULT_NAME_B}) ;Part B
    same => n,Playback(cutelphonegame/animals/${CAPTURE_RESULT_NAME_C}) ;Part C
    ;same => n,Playback(cutelphonegame/need_to_wait) ;"This phone has recently been captured and you'll need to wait..."
    ;same => n,SayNumber(${CAPTURE_RESULT_WAIT_HOURS}) ;Hour count
    ;same => n,Playback(cutelphonegame/hours) ;"Hours"
    ;same => n,SayNumber(${CAPTURE_RESULT_WAIT_MINUTES}) ;Minute count
    ;same => n,Playback(cutelphonegame/minutes) ;"Minutes"
    ;same => n,SayNumber(${CAPTURE_RESULT_WAIT_SECONDS}) ;Second count
    ;same => n,Playback(cutelphonegame/seconds) ;"Seconds"
    ;same => n,Playback(cutelphonegame/before_capture) ;"Before this phone can be captured again."
    same => n,Playback(cutelphonegame/need_to_wait_standalone) ;"This phone has recently been captured and you'll need to wait before it can be captured again."
    same => n,Goto(capture_stats)
    
    ; Capture Stats
    same => n(capture_stats),Playback(cutelphonegame/current_stats) ;"Your current stats are..."
    same => n,SayNumber(${CAPTURE_RESULT_TOTAL}) ;Total capture count
    same => n,Playback(cutelphonegame/captures_across) ;"Captures across..."
    same => n,SayNumber(${CAPTURE_RESULT_UNIQUE}) ;Unique capture count
    same => n,Playback(cutelphonegame/unique_placement) ;"Unique phones, placing you in position..."
    same => n,SayNumber(${CAPTURE_RESULT_LEADERBOARD}) ;Leaderboard position
    same => n,Playback(cutelphonegame/on_leaderboard) ;"on the leaderboard."
    same => n,Wait(0.5)
    same => n,Hangup()
    
    ; Capture Failure Handlers
    same => n(capture_failure_no_data),Verbose(2,No CURL response data was produced during capture)
    same => n,Goto(capture_failure)

    same => n(capture_failure_with_message),Verbose(2,Capture failed with message: ${REGISTER_RESULT_MESSAGE})
    same => n,GotoIf($["${CAPTURE_RESULT_MESSAGE}" = "This number is not allowed to be used in the game"]?capture_failure_with_message_number_not_allowed)
    same => n,GotoIf($["${CAPTURE_RESULT_MESSAGE}" = "This pin is invalid"]?capture_failure_with_message_pin_unknown)
    same => n,Goto(capture_failure)

    same => n(capture_failure_with_message_number_not_allowed),Playback(cutelphonegame/number_not_allowed) ;"This phone is out of bounds. Repeated use of out of bounds pho>
    same => n,Hangup()
    
    same => n(capture_failure_with_message_pin_unknown),Playback(cutelphonegame/pin_unknown) ;"This PIN is unknown. Make sure you noted it down correctly and try again."
    same => n,Hangup()

    same => n(capture_failure_without_message),Verbose(2,Unhandled CURL response: ${CURL_RESULT})
    same => n,Goto(capture_failure)

    ; Capture Failure
    same => n(capture_failure),Playback(cutelphonegame/error_capturing) ;"Sorry, an error occured capturing this phone. Please try again later."
    same => n,Log(Error,Failed to capture phone at ${CALLERID(num)} for PIN ${EXTEN:-4:4})
    same => n,Hangup()
